Exercicio 1 - Modele, projete e calcule a complexidade de um programa que:

a) Leia as linhas de um arquivo chamado "arq1.txt".

b) Peça para o usuario inserir um texto no terminal//console.

c) Compare o texto escrito pelo usuário e o texto lido no arquivo, e escreva na tela quantos termos IGUAIS e DIFERENTE.

d) Descreva as operacoes relevantes.

Exercicio 2 - Dado o código a seguir, responda:
a) Quantos e quais sao os casos base//condicao de parada para a funcao funcRec1()?

b) Explique com suas palavras o que a funcao funcRec1 calcula.

c) Represente a pilha de execucao para a chamada funcRec1(6).


Exercicio 3 - Modele, projete e calcule a complexidade de um programa que:
a) Leia a primeira linha de um arquivo chamado "entrada.txt"

b) Escreva em um arquivo chamado "saida.txt"o conteudo lido no arquivo de entrada ao contrário.

c) Descreva quais as operacoes relevantes.


Exercicio 4 - Um banco enfrenta problemas de consulta em seu banco de registros. Dentre os problemas identificados pela gerencia está a localizacao das contas dos seus titulares nas listagens e nos relatorios impressos em diferentes situacoes. Um especialista de TI sugeriu ordenar as contas por meio dos CPF dos seus n titulares antes das impressoes. Dentre alguns algoritmos pré seleconados para essa ordenacao o especialista escolheu o algoritmo de ordenacao por insercao. Se voce fosse o especialista, responda:
a) O especialista escolheu um bom algoritmo?

b) Qual algoritmo de ordenacao utilizaria?

c) Descreva quais operacoes relevantes.

d) Demonstre a viabilidade de sua solucao para 10 registros.

Exercicio 5 - O código a seguir implementa uma funcao recursiva. Analise-o indique o que será retornado pela funcao, caso os parametros possuam os seguintes dados: V={10,5,7,15,22,9,30} e A =6.

namespace lab2_fra
{
    internal class Program
    {
        static int ComparaArquivo(string FraseArquivo, String FraseEscrita)
        {
            int Iguais = 0, Diferentes = 0;

            for(int i=0; i <= FraseArquivo.Length; i++)
            {
                for()
                if (FraseArquivo[i] == FraseEscrita[i])
                {
                    Iguais++;
                    Diferentes++;

                }
                else
                {
                    Iguais++;
                    Diferentes++;
                }
            }
             return Iguais;
             return Diferentes;
        }
        
        static void Main(string[] args)
        {

            String Linha, ArmCaminho, FraseUs;
            StreamReader X;

            ArmCaminho = "C:\\AED\\Arq1.TXT";

            X = File.OpenText(ArmCaminho);

            //while (X.EndOfStream != true)
            //{
                Linha = X.ReadLine();
                Console.WriteLine(Linha);
            //}

            Console.WriteLine("Olá, informe uma frase para que possamos comparar:");
            FraseUs = Console.ReadLine();

            ComparaArquivo(FraseUs, Linha);

            X.Close();
            Console.ReadKey();
        }
    }
}






2

namespace lab2_fra
{
    internal class Program
    {
      static int funcRec1(int a)
        {
            if (a <= 1)
                return 0;
            else
                return funcRec1((a - 2) + 5);
        }
        static void Main(string[] args)
        {

            int a = 6, r;

            r = funcRec1(a);

            Console.WriteLine(r);

            Console.ReadKey();
        }
    }
}


5
